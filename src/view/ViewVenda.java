/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerCliente;
import controller.ControllerProduto;
import controller.ControllerProdutosVendasProdutos;
import controller.ControllerVendaCliente;
import controller.ControllerVenda;
import controller.ControllerVendasProdutos;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelCliente;
import model.ModelProduto;
import model.ModelProdutosVendasProdutos;
import model.ModelVenda;
import model.ModelVendaCliente;
import model.ModelVendasProdutos;
import util.BLDatas;

/**
 *
 * @author Wendel
 */
public class ViewVenda extends javax.swing.JFrame {

    ControllerCliente controllerCliente = new ControllerCliente();
    ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente> listaModelClientes = new ArrayList<>();

    ControllerProduto controllerProduto = new ControllerProduto();
    ModelProduto modelProduto = new ModelProduto();
    ArrayList<ModelProduto> listaModelProdutos = new ArrayList<>();

    ArrayList<ModelVendaCliente> listaModelVendaCliente = new ArrayList<>();
    ControllerVendaCliente controllerVendaCliente = new ControllerVendaCliente();

    ControllerVenda controllerVenda = new ControllerVenda();
    ModelVenda modelVenda = new ModelVenda();
    BLDatas bLDatas = new BLDatas();

    ControllerVendasProdutos controllerVendasProdutos = new ControllerVendasProdutos();
    ModelVendasProdutos modelVendasProdutos = new ModelVendasProdutos();
    ArrayList<ModelVendasProdutos> listaModelVendasProdutos = new ArrayList<>();

    ControllerProdutosVendasProdutos controllerProdutosVendasProdutos = new ControllerProdutosVendasProdutos();
    ModelProdutosVendasProdutos modelProdutosVendasProdutos = new ModelProdutosVendasProdutos();
    ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasProdutos = new ArrayList<>();

    String salvarAlterar = "salvar";

    /**
     * Creates new form ViewVenda
     */
    public ViewVenda() {
        initComponents();
        listarClientes();
        listarProdutos();
        carregarVendas();
        preencherComboboxCliente();
        preencherComboboxProduto();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCodigoCliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldNumeroVenda = new javax.swing.JTextField();
        jTextFieldCodigoProduto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldQuantidade = new javax.swing.JTextField();
        jButtonAdicionar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProdutosVenda = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldDesconto = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldValorTotal = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        uJComboBoxNomeProduto = new componentes.UJComboBox();
        uJComboBoxNomeCliente = new componentes.UJComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldPesquisar = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableVendas = new javax.swing.JTable();
        jButtonExcluir = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jButtonImpVenda = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MANUTENÇÃO DE VENDAS");
        setResizable(false);

        jLabel1.setText("CÓDIGO DO CLIETE:");

        jTextFieldCodigoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCodigoClienteFocusLost(evt);
            }
        });

        jLabel2.setText("NOME DO CLIENTE:");

        jLabel3.setText("Nº DA VENDA:");

        jTextFieldNumeroVenda.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldNumeroVenda.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTextFieldNumeroVenda.setForeground(new java.awt.Color(255, 0, 0));

        jTextFieldCodigoProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCodigoProdutoFocusLost(evt);
            }
        });

        jLabel4.setText("CÓDIGO DO PROD.:");

        jLabel5.setText("NOME DO PRODUTO:");

        jLabel6.setText("QUANTIDADE:");

        jButtonAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconfinder_plus-24_103172_1.png"))); // NOI18N
        jButtonAdicionar.setText("ADICIONAR");
        jButtonAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarActionPerformed(evt);
            }
        });

        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconfinder_cancel-2_309095.png"))); // NOI18N
        jButtonCancelar.setText("CANCELAR");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconfinder_checkmark-24_103184.png"))); // NOI18N
        jButtonSalvar.setText("SALVAR");
        jButtonSalvar.setEnabled(false);
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconfinder_plus-24_103172.png"))); // NOI18N
        jButtonNovo.setText("NOVO");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jTableProdutosVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "COD. PRODUTO", "NOME PRODUTO", "QUANTIDADE", "VALOR UN. R$", "VALOR TOTAL R$"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableProdutosVenda);
        if (jTableProdutosVenda.getColumnModel().getColumnCount() > 0) {
            jTableProdutosVenda.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTableProdutosVenda.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTableProdutosVenda.getColumnModel().getColumn(2).setPreferredWidth(20);
            jTableProdutosVenda.getColumnModel().getColumn(3).setPreferredWidth(20);
            jTableProdutosVenda.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        jLabel7.setText("DESCONTO:");

        jTextFieldDesconto.setText("0");
        jTextFieldDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDescontoFocusLost(evt);
            }
        });

        jLabel8.setText("VALOR TOTAL:");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconfinder_200_CircledMinus_183317.png"))); // NOI18N
        jButton1.setText("REMOVER PRODUTOS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        uJComboBoxNomeProduto.setAutocompletar(true);
        uJComboBoxNomeProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                uJComboBoxNomeProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        uJComboBoxNomeCliente.setAutocompletar(true);
        uJComboBoxNomeCliente.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                uJComboBoxNomeClientePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldCodigoCliente))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(uJComboBoxNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNumeroVenda)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 86, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(uJComboBoxNomeProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAdicionar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(100, 100, 100)
                                    .addComponent(jLabel8))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jTextFieldDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextFieldValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonSalvar)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNumeroVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uJComboBoxNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAdicionar)
                    .addComponent(uJComboBoxNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNovo)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("CADASTRO", jPanel1);

        jLabel9.setText("LOCALIZAR:");

        jButtonPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconfinder_search_322497_1.png"))); // NOI18N
        jButtonPesquisar.setText("PESQUISAR");

        jTableVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N. DA VENDA", "NOME DO CLIENTE", "DATA DA VENDA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableVendas);
        if (jTableVendas.getColumnModel().getColumnCount() > 0) {
            jTableVendas.getColumnModel().getColumn(0).setMinWidth(90);
            jTableVendas.getColumnModel().getColumn(0).setPreferredWidth(90);
            jTableVendas.getColumnModel().getColumn(0).setMaxWidth(90);
            jTableVendas.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTableVendas.getColumnModel().getColumn(2).setMinWidth(120);
            jTableVendas.getColumnModel().getColumn(2).setPreferredWidth(120);
            jTableVendas.getColumnModel().getColumn(2).setMaxWidth(120);
        }

        jButtonExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconfinder_cross-24_103181.png"))); // NOI18N
        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconfinder_new-24_103173.png"))); // NOI18N
        jButtonAlterar.setText("ALTERAR");
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jButtonImpVenda.setText("Imprimir Venda");
        jButtonImpVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImpVendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonPesquisar)))
                        .addGap(0, 97, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButtonAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonImpVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonPesquisar)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonExcluir)
                    .addComponent(jButtonAlterar)
                    .addComponent(jButtonImpVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("CONSULTAR - ALTERAR - EXCLUIR", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        // Habilitando os campos para edição
        jButtonSalvar.setEnabled(true);
        salvarAlterar = "salvar";
        limpaFormulario();

    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        //desabilita e limpa os campos
        jButtonSalvar.setEnabled(false);
        salvarAlterar = "salvar";
        limpaFormulario();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // TODO add your handling code here:
        int codigoVenda = 0, codigoProduto = 0;
        listaModelVendasProdutos = new ArrayList<>();

        if (!jTextFieldNumeroVenda.getText().equals("")) {
            modelVenda.setIdVenda(Integer.parseInt(jTextFieldNumeroVenda.getText()));
        }

        modelVenda.setCliente(Integer.parseInt(jTextFieldCodigoCliente.getText()));
        try {
            modelVenda.setVenData(bLDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
        } catch (Exception e) {
        }
        modelVenda.setVenValorLiquido(Double.parseDouble(jTextFieldValorTotal.getText()));
        modelVenda.setVenValorBruto(Double.parseDouble(jTextFieldValorTotal.getText()) + Double.parseDouble(jTextFieldDesconto.getText()));
        modelVenda.setVenDesconto(Double.parseDouble(jTextFieldDesconto.getText()));

        if (salvarAlterar.equals("salvar")) {
            //Salvando venda
            codigoVenda = controllerVenda.salvarVendaController(modelVenda);

            if (codigoVenda > 0) {
                JOptionPane.showMessageDialog(this, "VENDA SALVA COM SUCESSO!", "MANUTENÇÃO DE VENDAS", JOptionPane.INFORMATION_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(this, "ERRO AO SALVAR VENDA!", "MANUTENÇÃO DE VENDAS", JOptionPane.ERROR_MESSAGE);
            }
            //Salvando produtos da venda
            int cont = jTableProdutosVenda.getRowCount();
            for (int i = 0; i < cont; i++) {
                codigoProduto = (int) jTableProdutosVenda.getValueAt(i, 0);
                modelVendasProdutos = new ModelVendasProdutos();
                modelProduto = new ModelProduto();
                modelVendasProdutos.setProduto(codigoProduto);
                modelVendasProdutos.setVenda(codigoVenda);
                modelVendasProdutos.setVenProValor((double) jTableProdutosVenda.getValueAt(i, 3));
                modelVendasProdutos.setVenProQuantidade(Integer.parseInt(jTableProdutosVenda.getValueAt(i, 2).toString()));

                //Baixa no estoque
                modelProduto.setIdProduto(codigoProduto);
                modelProduto.setProEstoque(controllerProduto.retornarProdutoController(codigoProduto).getProEstoque()
                        - Integer.parseInt(jTableProdutosVenda.getValueAt(i, 2).toString()));

                listaModelVendasProdutos.add(modelVendasProdutos);
                listaModelProdutos.add(modelProduto);

            }
            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
                //alterar o estoque dos produtos
                controllerProduto.alterarEstoqueProdutoController(listaModelProdutos);
//                JOptionPane.showMessageDialog(this, "PRODUTOS DA VENDA SALVO COM SUCESSO!", "MANUTENÇÃO DE VENDAS", JOptionPane.INFORMATION_MESSAGE);
                carregarVendas();
                limpaFormulario();
            } else {
                JOptionPane.showMessageDialog(this, "ERRO AO SALVAR PRODUTOS DA VENDA!", "MANUTENÇÃO DE VENDAS", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            //Altera e excluir produtos da venda INICIO
            int linha = jTableVendas.getSelectedRow();
            codigoVenda = (int) jTableVendas.getValueAt(linha, 0);

            listaModelProdutos = new ArrayList<>();
            listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
            for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
                modelProduto = new ModelProduto();
                modelProduto.setIdProduto(listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto());
                modelProduto.setProEstoque(
                        listaModelProdutosVendasProdutos.get(i).getModelProdutos().getProEstoque()
                        + listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade());
                listaModelProdutos.add(modelProduto);
            }
            if (controllerProduto.alterarEstoqueProdutoController(listaModelProdutos)) {
                if (controllerVendasProdutos.excluirVendasProdutosController(codigoVenda)) {
//                    JOptionPane.showMessageDialog(this, "VENDA EXCLUÍDA COM SUCESSO!", "MANUTENÇÃO DE VENDAS", JOptionPane.INFORMATION_MESSAGE);
                    this.carregarVendas();
                } else {
                    JOptionPane.showMessageDialog(this, "ERRO AO EXCLUIR VENDA!", "MANUTENÇÃO DE VENDAS", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "ERRO AO EXCLUIR VENDA!", "MANUTENÇÃO DE VENDAS", JOptionPane.ERROR_MESSAGE);
            }
            //Altera e excluir produtos da venda INICIO
            //--------------------------------------------

            if (controllerVenda.atualizarVendaController(modelVenda)) {
                JOptionPane.showMessageDialog(this, "VENDA ALTERADA COM SUCESSO!", "MANUTENÇÃO DE VENDAS", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "ERRO AO ALTERAR VENDA!", "MANUTENÇÃO DE VENDAS", JOptionPane.ERROR_MESSAGE);
            }
            //adicionar produtos na lista para salvar
            int cont = jTableProdutosVenda.getRowCount();
            for (int i = 0; i < cont; i++) {
                codigoProduto = (int) jTableProdutosVenda.getValueAt(i, 0);
                modelVendasProdutos = new ModelVendasProdutos();
                modelProduto = new ModelProduto();
                modelVendasProdutos.setProduto(codigoProduto);
                modelVendasProdutos.setVenda(codigoVenda);
                modelVendasProdutos.setVenProValor((double) jTableProdutosVenda.getValueAt(i, 3));
                modelVendasProdutos.setVenProQuantidade(Integer.parseInt(jTableProdutosVenda.getValueAt(i, 2).toString()));

                //Baixa no estoque
                modelProduto.setIdProduto(codigoProduto);
                modelProduto.setProEstoque(controllerProduto.retornarProdutoController(codigoProduto).getProEstoque()
                        - Integer.parseInt(jTableProdutosVenda.getValueAt(i, 2).toString()));

                listaModelVendasProdutos.add(modelVendasProdutos);
                listaModelProdutos.add(modelProduto);

            }

            //salvar produtos da venda
            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
//                JOptionPane.showMessageDialog(this, "PRODUTOS DA VENDA SALVO COM SUCESSO!", "MANUTENÇÃO DE VENDAS", JOptionPane.INFORMATION_MESSAGE);
                carregarVendas();
                limpaFormulario();
            } else {
                JOptionPane.showMessageDialog(this, "ERRO AO SALVAR PRODUTOS DA VENDA!", "MANUTENÇÃO DE VENDAS", JOptionPane.ERROR_MESSAGE);
            }

        }
        jButtonSalvar.setEnabled(false);
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        // TODO add your handling code here:
        int linha = jTableVendas.getSelectedRow();
        int codigoVenda = (int) jTableVendas.getValueAt(linha, 0);

        listaModelProdutos = new ArrayList<>();
        listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
        for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
            modelProduto = new ModelProduto();
            modelProduto.setIdProduto(listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto());
            modelProduto.setProEstoque(
                    listaModelProdutosVendasProdutos.get(i).getModelProdutos().getProEstoque()
                    + listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade());
            listaModelProdutos.add(modelProduto);
        }
        if (controllerProduto.alterarEstoqueProdutoController(listaModelProdutos)) {
            controllerVendasProdutos.excluirVendasProdutosController(codigoVenda);
            if (controllerVenda.excluirVendaController(codigoVenda)) {
                JOptionPane.showMessageDialog(this, "VENDA EXCLUÍDA COM SUCESSO!", "MANUTENÇÃO DE VENDAS", JOptionPane.INFORMATION_MESSAGE);
                this.carregarVendas();
            } else {
                JOptionPane.showMessageDialog(this, "ERRO AO EXCLUIR VENDA!", "MANUTENÇÃO DE VENDAS", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "ERRO AO EXCLUIR VENDA!", "MANUTENÇÃO DE VENDAS", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
        // TODO add your handling code here:
        jButtonSalvar.setEnabled(true);
        salvarAlterar = "alterar";
        int linha = jTableVendas.getSelectedRow();
        int codigoVenda = (int) jTableVendas.getValueAt(linha, 0);
        listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);

        DefaultTableModel modelo = (DefaultTableModel) jTableProdutosVenda.getModel();
        modelo.setNumRows(0);
        for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
            jTextFieldNumeroVenda.setText(String.valueOf(listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenda()));
            modelo.addRow(new Object[]{
                listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto(),
                listaModelProdutosVendasProdutos.get(i).getModelProdutos().getProNome(),
                listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade(),
                listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProValor(),
                //Calculando valor total
                listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade()
                * listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProValor()
            });
        }
        somarValorTotalProdutos();
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButtonAlterarActionPerformed

    private void jTextFieldCodigoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCodigoClienteFocusLost
        // TODO add your handling code here:
        int codigoClíente = Integer.parseInt(jTextFieldCodigoCliente.getText());
        modelCliente = controllerCliente.getClienteController(codigoClíente);
        uJComboBoxNomeCliente.setSelectedItem(modelCliente.getCliNome());
    }//GEN-LAST:event_jTextFieldCodigoClienteFocusLost

    private void jTextFieldCodigoProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCodigoProdutoFocusLost
        // TODO add your handling code here:
        int codigoProduto = Integer.parseInt(jTextFieldCodigoProduto.getText());
        modelProduto = controllerProduto.retornarProdutoController(codigoProduto);
        uJComboBoxNomeProduto.setSelectedItem(modelProduto.getProNome());
    }//GEN-LAST:event_jTextFieldCodigoProdutoFocusLost

    private void jButtonAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarActionPerformed
        // TODO add your handling code here:
        if (jTextFieldQuantidade.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "INFORME A QUANTIDADE!", "MANUTENÇÃO DE VENDAS", JOptionPane.WARNING_MESSAGE);
        } else {
            modelProduto = controllerProduto.retornarProdutoController(Integer.parseInt(jTextFieldCodigoProduto.getText()));
            //Adiciona uma linha na tabela
            DefaultTableModel modelo = (DefaultTableModel) jTableProdutosVenda.getModel();
            int cont = 0;
            double quantidade = Double.parseDouble(jTextFieldQuantidade.getText());
            for (int i = 0; i < cont; i++) {
                modelo.setNumRows(0);
            }
            //Adicionando dados na linha
            modelo.addRow(new Object[]{
                modelProduto.getIdProduto(),
                modelProduto.getProNome(),
                jTextFieldQuantidade.getText(),
                modelProduto.getProValor(),
                quantidade * modelProduto.getProValor()
            });

            somarValorTotalProdutos();
        }
    }//GEN-LAST:event_jButtonAdicionarActionPerformed

    private void jTextFieldDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDescontoFocusLost
        // TODO add your handling code here:
        somarValorTotalProdutos();
    }//GEN-LAST:event_jTextFieldDescontoFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int linha = jTableProdutosVenda.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) jTableProdutosVenda.getModel();
        modelo.removeRow(linha);
        somarValorTotalProdutos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void uJComboBoxNomeProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_uJComboBoxNomeProdutoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (uJComboBoxNomeProduto.isPopupVisible()) {
            preencherComboboxProduto();
        }
    }//GEN-LAST:event_uJComboBoxNomeProdutoPopupMenuWillBecomeInvisible

    private void uJComboBoxNomeClientePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_uJComboBoxNomeClientePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (uJComboBoxNomeCliente.isPopupVisible()) {
            preencherComboboxCliente();
        }
    }//GEN-LAST:event_uJComboBoxNomeClientePopupMenuWillBecomeInvisible

    private void jButtonImpVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImpVendaActionPerformed
        int linha = jTableVendas.getSelectedRow();
        int codigoVenda = (int) jTableVendas.getValueAt(linha, 0);
        final ViewAguarde viewAguarde = new ViewAguarde();
        viewAguarde.setVisible(true);
        Thread t = new Thread() {
            public void run() {
                //Método de impressão
                try {
                    controllerVenda.gerarRelatorioVenda(codigoVenda);
                    viewAguarde.dispose();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "ERRO AO IMPRIMIR RELATÓRIO!\n" + e.getMessage(), "MANUTENÇÃO DE VENDAS", JOptionPane.ERROR_MESSAGE);
                }
            }
        };
        t.start();
    }//GEN-LAST:event_jButtonImpVendaActionPerformed

    /**
     * Limpa os dados do formulário
     */
    private void limpaFormulario() {
        jTextFieldQuantidade.setText("");
        jTextFieldDesconto.setText("0");
        jTextFieldValorTotal.setText("");
        DefaultTableModel modelo = (DefaultTableModel) jTableProdutosVenda.getModel();
        modelo.setNumRows(0);
    }

    private void preencherComboboxProduto() {
        String nomeProduto = uJComboBoxNomeProduto.getSelectedItem().toString();
        modelProduto = controllerProduto.retornarProdutoController(nomeProduto);
        jTextFieldCodigoProduto.setText(String.valueOf(modelProduto.getIdProduto()));

    }

    private void preencherComboboxCliente() {
        String nomeCliente = uJComboBoxNomeCliente.getSelectedItem().toString();
        modelCliente = controllerCliente.getClienteController(nomeCliente);
        jTextFieldCodigoCliente.setText(String.valueOf(modelCliente.getIdCliente()));
    }

    /**
     * Preenche a combobox cliente
     */
    private void listarClientes() {
        listaModelClientes = controllerCliente.getListaClienteController();
        this.uJComboBoxNomeCliente.removeAllItems();
        for (int i = 0; i < listaModelClientes.size(); i++) {
            this.uJComboBoxNomeCliente.addItem(listaModelClientes.get(i).getCliNome());
        }
    }

    /**
     * Preenche a combobox produtos
     */
    private void listarProdutos() {
        listaModelProdutos = controllerProduto.retornarListaProdutoController();
        this.uJComboBoxNomeProduto.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            this.uJComboBoxNomeProduto.addItem(listaModelProdutos.get(i).getProNome());
        }
    }

    /**
     * Aplica desconto ao valor total dos produtos
     */
    private void aplicaDesconto() {
        double valorToral = Double.parseDouble(jTextFieldValorTotal.getText());
        double desconto = Double.parseDouble(jTextFieldDesconto.getText());
        jTextFieldValorTotal.setText(String.valueOf(valorToral - desconto));
    }

    /**
     * Realiza a soma total dos produtos adicionados na tabela
     */
    private void somarValorTotalProdutos() {
        double soma = 0, valor;
        int cont = jTableProdutosVenda.getRowCount();
        for (int i = 0; i < cont; i++) {
            valor = (double) jTableProdutosVenda.getValueAt(i, 4);
            soma += valor;
        }
        jTextFieldValorTotal.setText(String.valueOf(soma));
        aplicaDesconto();
    }

    /**
     * Preenche a tabela com as vendas e os dados do cliente
     */
    private void carregarVendas() {
        DefaultTableModel modelo = (DefaultTableModel) jTableVendas.getModel();
        listaModelVendaCliente = controllerVendaCliente.getListaVendaClienteController();
        int cont = listaModelVendaCliente.size();
        modelo.setNumRows(0);
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelVendaCliente.get(i).getModelVenda().getIdVenda(),
                listaModelVendaCliente.get(i).getModelCliente().getCliNome(),
                listaModelVendaCliente.get(i).getModelVenda().getVenData()
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewVenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAdicionar;
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonImpVenda;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableProdutosVenda;
    private javax.swing.JTable jTableVendas;
    private javax.swing.JTextField jTextFieldCodigoCliente;
    private javax.swing.JTextField jTextFieldCodigoProduto;
    private javax.swing.JTextField jTextFieldDesconto;
    private javax.swing.JTextField jTextFieldNumeroVenda;
    private javax.swing.JTextField jTextFieldPesquisar;
    private javax.swing.JTextField jTextFieldQuantidade;
    private javax.swing.JTextField jTextFieldValorTotal;
    private componentes.UJComboBox uJComboBoxNomeCliente;
    private componentes.UJComboBox uJComboBoxNomeProduto;
    // End of variables declaration//GEN-END:variables
}
